# D√©finition des chemins
$ClamWinPath = "C:\Program Files (x86)\ClamWin\bin\clamscan.exe"
$DossierReception = "Z:\"  # Dossier r√©seau mont√©
$DossierAnalyse = "C:\analyse"
$DossierTransfer = "C:\projet\disponible"
$FichierLog = "C:\projet\logs\logs.txt"

# Fonction d'√©criture dans le log
function Write-Log {
    param ($Message)
    "$((Get-Date).ToString("yyyy-MM-dd HH:mm:ss")) | $Message" | Out-File -Append -FilePath $FichierLog
}

# V√©rification du lecteur r√©seau
if (!(Test-Path $DossierReception)) {
    Write-Log "‚ùå Le lecteur r√©seau $DossierReception est inaccessible."
    Write-Host "Le lecteur r√©seau $DossierReception est inaccessible. V√©rifiez la connexion."
    exit
}

Write-Log "‚úÖ Le lecteur r√©seau $DossierReception est accessible."

# R√©cup√©ration des dossiers dans le r√©pertoire de r√©ception
Get-ChildItem -Path $DossierReception -Directory | ForEach-Object {
    $DossierUtilisateur = $_.FullName
    $NomUtilisateur = $_.Name

    # V√©rification que le dossier source existe
    if (Test-Path $DossierUtilisateur) {
        Write-Log "üìÇ Dossier d√©tect√©: $DossierUtilisateur"

        # Cr√©ation du dossier d'analyse si inexistant
        $DossierAnalyseUtilisateur = "$DossierAnalyse\$NomUtilisateur"
        if (!(Test-Path $DossierAnalyseUtilisateur)) {
            Write-Log "üìÇ Cr√©ation du dossier d'analyse: $DossierAnalyseUtilisateur"
            New-Item -Path $DossierAnalyseUtilisateur -ItemType Directory | Out-Null
        }

        # D√©placement vers dossier d'analyse
        Write-Log "üîÑ D√©placement vers l'analyse: $DossierUtilisateur -> $DossierAnalyseUtilisateur"
        Move-Item -Path $DossierUtilisateur -Destination $DossierAnalyseUtilisateur -Force
        Write-Host "Dossier d√©plac√© vers l'analyse: $DossierUtilisateur -> $DossierAnalyseUtilisateur"

        # Ex√©cution de l'analyse ClamWin
        Write-Log "üïµÔ∏è D√©but de l'analyse ClamWin: $DossierAnalyseUtilisateur"
        $Resultat = & "$ClamWinPath" --no-summary --infected --log="$FichierLog" "$DossierAnalyseUtilisateur"

        # V√©rification du r√©sultat de l‚Äôanalyse
        if ($Resultat -match "Infected files: 0") {
            # Fichier sain : d√©placement vers dossier de transfert
            $DossierTransfertUtilisateur = "$DossierTransfer\$NomUtilisateur"
            if (!(Test-Path $DossierTransfertUtilisateur)) {
                Write-Log "üìÇ Cr√©ation du dossier de transfert: $DossierTransfertUtilisateur"
                New-Item -Path $DossierTransfertUtilisateur -ItemType Directory | Out-Null
            }

            # D√©placement du dossier analys√© vers transfert
            Write-Log "‚úÖ Dossier sain, d√©placement vers transfert: $DossierAnalyseUtilisateur -> $DossierTransfertUtilisateur"
            Move-Item -Path $DossierAnalyseUtilisateur -Destination $DossierTransfertUtilisateur -Force
            Write-Host "Dossier sain transf√©r√©: $DossierAnalyseUtilisateur -> $DossierTransfertUtilisateur"
        } else {
            Write-Log "‚ùå Dossier infect√©, non transf√©r√©: $DossierAnalyseUtilisateur"
            Write-Host "‚ö†Ô∏è Dossier infect√© d√©tect√©, il reste dans: $DossierAnalyseUtilisateur"
        }
    } else {
        Write-Log "‚ùå Dossier source introuvable: $DossierUtilisateur"
        Write-Host "Dossier source introuvable: $DossierUtilisateur"
    }
}
