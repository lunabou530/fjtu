# D√©finition des chemins
$DossierReception = "Z:\"  # Dossier r√©seau mont√©
$DossierTransfer = "C:\projet\disponible"
$FichierLog = "C:\projet\logs\logs.txt"

# Fonction d'√©criture dans le log
function Write-Log {
    param ($Message)
    "$((Get-Date).ToString("yyyy-MM-dd HH:mm:ss")) | $Message" | Out-File -Append -FilePath $FichierLog
}

# V√©rification de l'existence du lecteur r√©seau
if (!(Test-Path $DossierReception)) {
    Write-Log "‚ùå Le lecteur r√©seau $DossierReception est inaccessible. V√©rifiez la connexion."
    Write-Host "Le lecteur r√©seau $DossierReception est inaccessible. V√©rifiez la connexion."
    exit
} else {
    Write-Log "‚úÖ Le lecteur r√©seau $DossierReception est accessible."
}

# R√©cup√©ration des dossiers dans le r√©pertoire de r√©ception
Get-ChildItem -Path $DossierReception -Directory | ForEach-Object {
    $DossierUtilisateur = $_.FullName

    # V√©rification que le dossier source existe
    if (Test-Path $DossierUtilisateur) {
        Write-Log "üìÇ Dossier d√©tect√©: $DossierUtilisateur"

        # Cr√©ation du dossier de destination s'il n'existe pas
        $DossierTransfertUtilisateur = "$DossierTransfer\$($_.Name)"
        if (!(Test-Path $DossierTransfertUtilisateur)) {
            Write-Log "üìÇ Cr√©ation du dossier de transfert: $DossierTransfertUtilisateur"
            New-Item -Path $DossierTransfertUtilisateur -ItemType Directory | Out-Null
        }

        # D√©placement du dossier vers le dossier de transfert
        Write-Log "üîÑ D√©placement du dossier $DossierUtilisateur vers $DossierTransfertUtilisateur"
        Move-Item -Path $DossierUtilisateur -Destination $DossierTransfertUtilisateur -Force
        Write-Log "‚úÖ Dossier d√©plac√©: $DossierUtilisateur vers $DossierTransfertUtilisateur"
        Write-Host "R√©ussite: $DossierUtilisateur d√©plac√© vers $DossierTransfertUtilisateur"
    } else {
        Write-Log "‚ùå Dossier source introuvable: $DossierUtilisateur"
        Write-Host "Dossier source introuvable: $DossierUtilisateur"
    }
}
