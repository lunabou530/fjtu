
$dossier_source = "Z:\"
$dossier_destination = "C:\projet\disponible"

$clamScanPath = "C:\Program Files (x86)\ClamWin\bin\clamscan.exe"

$databasePath = "C:\Program Files (x86)\ClamWin\bin\db"

if (-not (Test-Path $clamScanPath)) {
    Write-Output "Erreur: Le chemin vers clamscan.exe est incorrect ou le fichier n'existe pas."
    exit
}

$databaseFiles = "bytecode.cvd", "daily.cvd", "main.cvd", "mirrors.dat"
foreach ($file in $databaseFiles) {
    if (-not (Test-Path (Join-Path -Path $databasePath -ChildPath $file))) {
        Write-Output "Erreur: Fichier de base de données manquant: $file"
        exit
    }
}

while ($true) {
    Get-ChildItem -Path $dossier_source -Recurse | ForEach-Object {
        $item = $_

        if ($item.PSIsContainer -eq $false) {
            Write-Output "Analyse du fichier: $($item.FullName)"

            $clamScanResult = & $clamScanPath --verbose --recursive --database=$databasePath $item.FullName 2>&1

            Write-Output "Sortie de ClamWin: $clamScanResult"

            if ($clamScanResult -match "Infected files: 0") {

                $destination_path = Join-Path -Path $dossier_destination -ChildPath $item.FullName.Substring($dossier_source.Length)

                $destination_directory = Split-Path -Path $destination_path -Parent
                if (-not (Test-Path -Path $destination_directory)) {
                    New-Item -ItemType Directory -Path $destination_directory | Out-Null
                }

            
                Move-Item -Path $item.FullName -Destination $destination_path
                Write-Output "Déplacé: $($item.FullName) vers $destination_path"
            } else {
                Remove-Item -Path $item.FullName -Recurse -Force
                Write-Output "Fichier infecté ou erreur: $($item.FullName)"
            }
        }
    }

    Write-Output "Déplacement terminé pour cette itération."
    Start-Sleep -Seconds 10  # Attendre 10 secondes avant la prochaine itération
}
