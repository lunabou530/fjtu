# Définition des chemins
$DossierReception = "\\serveur\samba_share"
$DossierAnalyse = "C:\analyse"
$DossierTransfer = "\\serveur\samba_sortie"
$FichierLog = "C:\log\logs.txt"
$ClamWinPath = "C:\Program Files (x86)\ClamWin\bin\clamscan.exe"  # Chemin vers l'exécutable ClamWin

# Fonction d'écriture dans le log
function Write-Log {
    param ($Message)
    "$((Get-Date).ToString("yyyy-MM-dd HH:mm:ss")) | $Message" | Out-File -Append -FilePath $FichierLog
}

# Fonction d'analyse avec ClamWin
function Analyse-ClamWin {
    param ($Fichier)
    $Resultat = & "$ClamWinPath" --no-summary --infected --log="$FichierLog" "$Fichier"
    return $Resultat
}

# Surveillance des fichiers
while ($true) {
    Get-ChildItem -Path $DossierReception -Directory | ForEach-Object {
        $DossierUtilisateur = $_.FullName
        Get-ChildItem -Path $DossierUtilisateur -Directory | ForEach-Object {
            $DossierFichier = $_.FullName
            Write-Log "Dossier détecté: $DossierFichier"
            
            # Analyse avec ClamWin
            $AnalyseResultatClamWin = Analyse-ClamWin $DossierFichier
            Write-Log "ClamWin analyse: $AnalyseResultatClamWin"
            
            # Vérification des menaces détectées par ClamWin
            $MenacesClamWin = $AnalyseResultatClamWin -contains "FOUND"
            
            if (!$MenacesClamWin) {
                # Fichier sain : déplacement vers le dossier de transfert
                $NomUtilisateur = (Get-Item $DossierUtilisateur).Name
                $DossierTransfertUtilisateur = "$DossierTransfer\$NomUtilisateur"
                if (!(Test-Path $DossierTransfertUtilisateur)) {
                    New-Item -Path $DossierTransfertUtilisateur -ItemType Directory | Out-Null
                }
                Move-Item -Path $DossierFichier -Destination $DossierTransfertUtilisateur -Force
                Write-Log "$DossierFichier | sain | fichier_transfere"
                Write-Host "Réussite: $DossierFichier transféré vers $DossierTransfertUtilisateur"
            } else {
                Write-Log "$DossierFichier | VIRUS | fichier_non_transfere"
                Write-Host "Échec: $DossierFichier est infecté et n'a pas été transféré."
            }
            
            Write-Log "Analyse terminée pour $DossierFichier"
        }
    }
    Start-Sleep -Seconds 10
}
